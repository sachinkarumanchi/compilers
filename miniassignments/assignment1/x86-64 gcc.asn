.LC0:
        .string "fibanacci number is even"
.LC1:
        .string "fibanacci number is odd"
.LC3:
        .string "\n%f"
main:
        push    rbp
        mov     rbp, rsp
        sub     rsp, 48
        call    clock
        mov     QWORD PTR [rbp-32], rax
        mov     DWORD PTR [rbp-4], 0
        mov     DWORD PTR [rbp-8], 1
        mov     DWORD PTR [rbp-20], 0
        jmp     .L2
.L3:
        mov     edx, DWORD PTR [rbp-4]
        mov     eax, DWORD PTR [rbp-8]
        add     eax, edx
        cdqe
        mov     QWORD PTR [rbp-16], rax
        mov     eax, DWORD PTR [rbp-8]
        mov     DWORD PTR [rbp-4], eax
        mov     rax, QWORD PTR [rbp-16]
        mov     DWORD PTR [rbp-8], eax
        add     DWORD PTR [rbp-20], 1
.L2:
        cmp     DWORD PTR [rbp-20], 99999
        jbe     .L3
        mov     rax, QWORD PTR [rbp-16]
        and     eax, 1
        test    rax, rax
        jne     .L4
        mov     edi, OFFSET FLAT:.LC0
        mov     eax, 0
        call    printf
        jmp     .L5
.L4:
        mov     edi, OFFSET FLAT:.LC1
        mov     eax, 0
        call    printf
.L5:
        call    clock
        mov     QWORD PTR [rbp-40], rax
        mov     rax, QWORD PTR [rbp-40]
        sub     rax, QWORD PTR [rbp-32]
        cvtsi2sd        xmm0, rax
        movsd   xmm1, QWORD PTR .LC2[rip]
        divsd   xmm0, xmm1
        movsd   QWORD PTR [rbp-48], xmm0
        movsd   xmm1, QWORD PTR [rbp-48]
        movsd   xmm0, QWORD PTR .LC2[rip]
        mulsd   xmm1, xmm0
        movq    rax, xmm1
        movq    xmm0, rax
        mov     edi, OFFSET FLAT:.LC3
        mov     eax, 1
        call    printf
        mov     eax, 0
        leave
        ret
.LC2:
        .long   0
        .long   1093567616
